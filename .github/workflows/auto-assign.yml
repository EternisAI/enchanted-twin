name: 'Auto Assign'
on:
  pull_request_target:
    types: [opened, synchronize, ready_for_review]

permissions:
  pull-requests: write
  contents: read

jobs:
  assign:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          fetch-depth: 0
          
      - name: Install yq
        env:
          YQ_VERSION: "v4.44.1"          # ðŸ“Œ bump intentionally on updates
          YQ_SHA256: "6dc2d0cd4e0caca5aeffd0d784a48263591080e4a0895abe69f3a76eb50d1ba3"
        run: |
          curl -L -o yq https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64
          echo "${YQ_SHA256}  yq" | sha256sum -c -
          sudo install -m0755 yq /usr/local/bin/yq
          rm yq
      - name: Load team members as environment variables
        run: |
          echo "FRONTEND_REVIEWERS=$(yq -r '.teams.frontend | join(",")' .github/teams.yml)" >> $GITHUB_ENV
          echo "MCP_REVIEWERS=$(yq -r '.teams.mcp | join(",")' .github/teams.yml)" >> $GITHUB_ENV
          echo "MEMORY_REVIEWERS=$(yq -r '.teams.memory | join(",")' .github/teams.yml)" >> $GITHUB_ENV
          echo "AGENT_REVIEWERS=$(yq -r '.teams.agent | join(",")' .github/teams.yml)" >> $GITHUB_ENV
          echo "DATA_INGESTION_REVIEWERS=$(yq -r '.teams.data_ingestion | join(",")' .github/teams.yml)" >> $GITHUB_ENV
          echo "ANONYMISER_REVIEWERS=$(yq -r '.teams.anonymiser | join(",")' .github/teams.yml)" >> $GITHUB_ENV
          echo "HOLON_REVIEWERS=$(yq -r '.teams.holon | join(",")' .github/teams.yml)" >> $GITHUB_ENV
          echo "TWINCHAT_REVIEWERS=$(yq -r '.teams.twinchat | join(",")' .github/teams.yml)" >> $GITHUB_ENV
          echo "GITHUB_REVIEWERS=$(yq -r '.teams.github | join(",")' .github/teams.yml)" >> $GITHUB_ENV
          echo "DEFAULT_REVIEWERS=$(yq -r '.teams.default | join(",")' .github/teams.yml)" >> $GITHUB_ENV
          
      - name: Load teams for self-assignment prevention
        id: teams
        run: |
          echo "frontend=$(yq -r '.teams.frontend | join("\" \"")' .github/teams.yml)" >> $GITHUB_OUTPUT
          echo "mcp=$(yq -r '.teams.mcp | join("\" \"")' .github/teams.yml)" >> $GITHUB_OUTPUT
          
      - name: Check changed paths
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: filter
        with:
          filters: |
            frontend:
              - 'app/**'
            mcp:
              - 'backend/golang/pkg/mcpserver/**'
            memory:
              - 'backend/golang/pkg/agent/memory/**'
            agent:
              - 'backend/golang/pkg/agent/**'
            data_ingestion:
              - 'backend/golang/pkg/dataprocessing/**'
            anonymiser:
              - 'backend/golang/pkg/ai/**'
            holon:
              - 'backend/golang/pkg/holon/**'
            twinchat:
              - 'backend/golang/pkg/twinchat/**'
            github:
              - '.github/**'
              
      - name: Auto-assign reviewers - Frontend
        if: steps.filter.outputs.frontend == 'true' && !contains(steps.teams.outputs.frontend, github.actor)
        uses: kentaro-m/auto-assign-action@v2.0.0
        with:
          addReviewers: true
          addAssignees: false
          numberOfReviewers: 1
          reviewers: ${{ env.FRONTEND_REVIEWERS }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Auto-assign reviewers - MCP  
        if: steps.filter.outputs.mcp == 'true' && !contains(steps.teams.outputs.mcp, github.actor)
        uses: kentaro-m/auto-assign-action@v2.0.0
        with:
          addReviewers: true
          addAssignees: false
          numberOfReviewers: 1
          reviewers: ${{ env.MCP_REVIEWERS }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Auto-assign reviewers - Memory
        if: steps.filter.outputs.memory == 'true' && steps.filter.outputs.agent != 'true'
        uses: kentaro-m/auto-assign-action@v2.0.0
        with:
          addReviewers: true
          addAssignees: false
          numberOfReviewers: 1
          reviewers: ${{ env.MEMORY_REVIEWERS }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Auto-assign reviewers - Agent
        if: steps.filter.outputs.agent == 'true' && steps.filter.outputs.memory != 'true'
        uses: kentaro-m/auto-assign-action@v2.0.0
        with:
          addReviewers: true
          addAssignees: false
          numberOfReviewers: 1
          reviewers: ${{ env.AGENT_REVIEWERS }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Auto-assign reviewers - Data Ingestion
        if: steps.filter.outputs.data_ingestion == 'true'
        uses: kentaro-m/auto-assign-action@v2.0.0
        with:
          addReviewers: true
          addAssignees: false
          numberOfReviewers: 1
          reviewers: ${{ env.DATA_INGESTION_REVIEWERS }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Auto-assign reviewers - Anonymiser
        if: steps.filter.outputs.anonymiser == 'true'
        uses: kentaro-m/auto-assign-action@v2.0.0
        with:
          addReviewers: true
          addAssignees: false
          numberOfReviewers: 1
          reviewers: ${{ env.ANONYMISER_REVIEWERS }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Auto-assign reviewers - Holon
        if: steps.filter.outputs.holon == 'true'
        uses: kentaro-m/auto-assign-action@v2.0.0
        with:
          addReviewers: true
          addAssignees: false
          numberOfReviewers: 1
          reviewers: ${{ env.HOLON_REVIEWERS }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Auto-assign reviewers - TwinChat
        if: steps.filter.outputs.twinchat == 'true'
        uses: kentaro-m/auto-assign-action@v2.0.0
        with:
          addReviewers: true
          addAssignees: false
          numberOfReviewers: 1
          reviewers: ${{ env.TWINCHAT_REVIEWERS }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Auto-assign reviewers - GitHub/CI
        if: steps.filter.outputs.github == 'true'
        uses: kentaro-m/auto-assign-action@v2.0.0
        with:
          addReviewers: true
          addAssignees: false
          numberOfReviewers: 1
          reviewers: ${{ env.GITHUB_REVIEWERS }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Auto-assign reviewers - Default
        if: |
          steps.filter.outputs.frontend != 'true' &&
          steps.filter.outputs.mcp != 'true' &&
          steps.filter.outputs.memory != 'true' &&
          steps.filter.outputs.agent != 'true' &&
          steps.filter.outputs.data_ingestion != 'true' &&
          steps.filter.outputs.anonymiser != 'true' &&
          steps.filter.outputs.holon != 'true' &&
          steps.filter.outputs.twinchat != 'true' &&
          steps.filter.outputs.github != 'true'
        uses: kentaro-m/auto-assign-action@v2.0.0
        with:
          addReviewers: true
          addAssignees: false
          numberOfReviewers: 1
          reviewers: ${{ env.DEFAULT_REVIEWERS }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}