name: Release Enchanted Twin App

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version (e.g. v1.2.3)"
        required: true
        default: "v0.0.0"
  release:
    types: [published]

jobs:
  build-sign-notarise:
    runs-on: macos-latest        # must be macOS for codesign/notarytool
    defaults:
      run:
        shell: bash

    env:                         # secrets expected by electron-builder/notarytool
      GH_TOKEN:               ${{ secrets.GITHUB_TOKEN }}
      CSC_LINK:               ${{ secrets.CSC_LINK }}
      CSC_KEY_PASSWORD:       ${{ secrets.CSC_KEY_PASSWORD }}
      NOTARY_API_KEY_ID:      ${{ secrets.NOTARY_API_KEY_ID }}
      NOTARY_API_ISSUER:      ${{ secrets.NOTARY_API_ISSUER }}
      NOTARY_TEAM_ID:         ${{ secrets.NOTARY_TEAM_ID }}

    steps:
      # ──────────────────────────────  Setup  ──────────────────────────────
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Set up Go (for your Makefile, if needed)
        uses: actions/setup-go@v4
        with:
          go-version: 1.24.2

      # ───────────────────────  Install deps & build  ─────────────────────
      - name: Install dependencies
        working-directory: app
        run: pnpm install

      - name: Write Apple API key (.p8)
        run: |
          mkdir -p build
          echo "$APPLE_API_KEY" > build/AuthKey.p8
        env:
          APPLE_API_KEY: ${{ secrets.APPLE_API_KEY }}

      - name: Build, sign & notarise
        working-directory: app
        env:
          # runtime-env vars your Makefile / app needs
          OPENAI_BASE_URL:   "https://enchanted.ngrok.pro/v1"
          COMPLETIONS_MODEL: "mistral-small3.1"
          EMBEDDINGS_API_URL:"https://enchanted.ngrok.pro/v1/embeddings"
          EMBEDDINGS_MODEL:  "nomic-embed-text"
          IS_PROD_BUILD:     "true"
        run: |
          pnpm run build:mac          # runs electron-vite build && electron-builder --mac
          # electron-builder invokes build/notarize.js → notarytool → staple

      # ─────────────────────────  Verify staple  ──────────────────────────
      - name: Validate Gatekeeper ticket
        run: |
          APP_PATH=$(ls app/dist/mac-arm64/*.app | head -n 1)
          xcrun stapler validate "$APP_PATH"
          spctl --assess --type exec --verbose=4 "$APP_PATH"

      # ──────────────────  Upload signed DMG to Release  ──────────────────
      - name: Upload DMG(s)
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event_name == 'release' && github.event.release.tag_name || inputs.version }}
          files: app/dist/*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
