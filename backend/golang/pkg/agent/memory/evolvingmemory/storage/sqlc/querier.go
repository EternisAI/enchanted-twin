// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	CreateDocumentChunk(ctx context.Context, arg CreateDocumentChunkParams) (DocumentChunk, error)
	CreateMemoryFact(ctx context.Context, arg CreateMemoryFactParams) (MemoryFact, error)
	CreateSourceDocument(ctx context.Context, arg CreateSourceDocumentParams) (SourceDocument, error)
	DeleteMemoryFact(ctx context.Context, id pgtype.UUID) error
	// Document Chunks Queries
	GetDocumentChunk(ctx context.Context, id pgtype.UUID) (DocumentChunk, error)
	GetDocumentChunksByOriginalDocument(ctx context.Context, originalDocumentID string) ([]DocumentChunk, error)
	// Memory Facts Queries
	GetMemoryFact(ctx context.Context, id pgtype.UUID) (MemoryFact, error)
	GetMemoryFactsByIDs(ctx context.Context, dollar_1 []pgtype.UUID) ([]MemoryFact, error)
	// Source Documents Queries
	GetSourceDocument(ctx context.Context, id pgtype.UUID) (SourceDocument, error)
	GetSourceDocumentByHash(ctx context.Context, contentHash string) (SourceDocument, error)
	GetSourceDocumentsBatch(ctx context.Context, dollar_1 []pgtype.UUID) ([]SourceDocument, error)
	QueryDocumentChunksByVector(ctx context.Context, arg QueryDocumentChunksByVectorParams) ([]QueryDocumentChunksByVectorRow, error)
	QueryMemoryFactsByVector(ctx context.Context, arg QueryMemoryFactsByVectorParams) ([]QueryMemoryFactsByVectorRow, error)
	QueryMemoryFactsFilterOnly(ctx context.Context, arg QueryMemoryFactsFilterOnlyParams) ([]MemoryFact, error)
	UpdateMemoryFact(ctx context.Context, arg UpdateMemoryFactParams) (MemoryFact, error)
}

var _ Querier = (*Queries)(nil)
