// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package config

import (
	"database/sql"
	"time"
)

type Author struct {
	Identity string         `json:"identity"`
	Alias    sql.NullString `json:"alias"`
}

type Chat struct {
	ID            string         `json:"id"`
	Name          string         `json:"name"`
	Category      string         `json:"category"`
	HolonThreadID sql.NullString `json:"holonThreadId"`
	CreatedAt     time.Time      `json:"createdAt"`
}

type Config struct {
	Key   string         `json:"key"`
	Value sql.NullString `json:"value"`
}

type DataSource struct {
	ID            string         `json:"id"`
	Name          sql.NullString `json:"name"`
	Path          sql.NullString `json:"path"`
	ProcessedPath sql.NullString `json:"processedPath"`
	UpdatedAt     time.Time      `json:"updatedAt"`
	IsIndexed     sql.NullBool   `json:"isIndexed"`
	HasError      sql.NullBool   `json:"hasError"`
}

type FriendActivityTracking struct {
	ID           string    `json:"id"`
	ChatID       string    `json:"chatId"`
	ActivityType string    `json:"activityType"`
	Timestamp    time.Time `json:"timestamp"`
	CreatedAt    time.Time `json:"createdAt"`
}

type Holon struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

type HolonParticipant struct {
	HolonID        string    `json:"holonId"`
	AuthorIdentity string    `json:"authorIdentity"`
	JoinedAt       time.Time `json:"joinedAt"`
}

type McpServer struct {
	ID        string         `json:"id"`
	Name      string         `json:"name"`
	Command   string         `json:"command"`
	Args      interface{}    `json:"args"`
	Envs      interface{}    `json:"envs"`
	Type      sql.NullString `json:"type"`
	CreatedAt time.Time      `json:"createdAt"`
	Enabled   sql.NullBool   `json:"enabled"`
}

type Message struct {
	ID          string         `json:"id"`
	ChatID      string         `json:"chatId"`
	Text        sql.NullString `json:"text"`
	ToolCalls   interface{}    `json:"toolCalls"`
	ToolResults interface{}    `json:"toolResults"`
	ImageUrls   interface{}    `json:"imageUrls"`
	Role        sql.NullString `json:"role"`
	CreatedAt   time.Time      `json:"createdAt"`
}

type SourceUsername struct {
	ID          string         `json:"id"`
	Source      string         `json:"source"`
	Username    string         `json:"username"`
	UserID      sql.NullString `json:"userId"`
	FirstName   sql.NullString `json:"firstName"`
	LastName    sql.NullString `json:"lastName"`
	PhoneNumber sql.NullString `json:"phoneNumber"`
	Bio         sql.NullString `json:"bio"`
	CreatedAt   time.Time      `json:"createdAt"`
	UpdatedAt   time.Time      `json:"updatedAt"`
}

type Thread struct {
	ID             string        `json:"id"`
	Title          string        `json:"title"`
	Content        string        `json:"content"`
	AuthorIdentity string        `json:"authorIdentity"`
	CreatedAt      time.Time     `json:"createdAt"`
	ExpiresAt      sql.NullTime  `json:"expiresAt"`
	ImageUrls      interface{}   `json:"imageUrls"`
	Actions        interface{}   `json:"actions"`
	Views          int64         `json:"views"`
	State          string        `json:"state"`
	RemoteThreadID sql.NullInt64 `json:"remoteThreadId"`
}

type ThreadMessage struct {
	ID             string      `json:"id"`
	ThreadID       string      `json:"threadId"`
	AuthorIdentity string      `json:"authorIdentity"`
	Content        string      `json:"content"`
	CreatedAt      time.Time   `json:"createdAt"`
	IsDelivered    bool        `json:"isDelivered"`
	Actions        interface{} `json:"actions"`
	State          string      `json:"state"`
}

type UserProfile struct {
	ID   string         `json:"id"`
	Name sql.NullString `json:"name"`
	Bio  sql.NullString `json:"bio"`
}

type WhatsappMessage struct {
	ID             string    `json:"id"`
	ConversationID string    `json:"conversationId"`
	SenderJid      string    `json:"senderJid"`
	SenderName     string    `json:"senderName"`
	Content        string    `json:"content"`
	MessageType    string    `json:"messageType"`
	SentAt         time.Time `json:"sentAt"`
	FromMe         bool      `json:"fromMe"`
	CreatedAt      time.Time `json:"createdAt"`
}
