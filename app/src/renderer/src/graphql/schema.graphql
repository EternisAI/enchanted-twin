scalar DateTime
scalar JSON

type UserProfile {
  name: String
}

input UpdateProfileInput {
  name: String
}

type ToolCall {
  id: String!
  name: String!
  isCompleted: Boolean!
}

type Chat {
  id: ID!
  name: String!
  messages: [Message!]!
  createdAt: DateTime!
}

type Message {
  id: ID!
  text: String
  imageUrls: [String!]!
  role: Role!
  toolCalls: [ToolCall!]!
  toolResults: [String!]!
  createdAt: DateTime!
}

enum Role {
  USER
  ASSISTANT
}

type Query {
  profile: UserProfile!
  getChats(first: Int! = 10, offset: Int! = 0): [Chat!]!
  getChat(id: ID!): Chat!
}

type Mutation {
  updateProfile(input: UpdateProfileInput!): Boolean!
  createChat(name: String!): Chat!
  sendMessage(chatId: ID!, text: String!): Message!
  deleteChat(chatId: ID!): Chat!
}

type Subscription {
  messageAdded(chatId: ID!): Message!
  addDataSource(input: AddDataSourceInput!): Boolean!
}

input AddDataSourceInput {
  dataSourceName: String!
  path: String!
  username: String!
}
