/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TasksImport } from './routes/tasks'
import { Route as SettingsImport } from './routes/settings'
import { Route as OnboardingImport } from './routes/onboarding'
import { Route as OmnibarOverlayImport } from './routes/omnibar-overlay'
import { Route as AdminImport } from './routes/admin'
import { Route as IndexImport } from './routes/index'
import { Route as HolonIndexImport } from './routes/holon/index'
import { Route as SettingsPermissionsImport } from './routes/settings.permissions'
import { Route as SettingsDataSourcesImport } from './routes/settings.data-sources'
import { Route as SettingsCustomizeImport } from './routes/settings.customize'
import { Route as SettingsAdvancedImport } from './routes/settings.advanced'
import { Route as SettingsAboutImport } from './routes/settings.about'
import { Route as HolonThreadIdImport } from './routes/holon/$threadId'
import { Route as ChatChatIdImport } from './routes/chat/$chatId'

// Create/Update Routes

const TasksRoute = TasksImport.update({
  id: '/tasks',
  path: '/tasks',
  getParentRoute: () => rootRoute
} as any)

const SettingsRoute = SettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute
} as any)

const OnboardingRoute = OnboardingImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRoute
} as any)

const OmnibarOverlayRoute = OmnibarOverlayImport.update({
  id: '/omnibar-overlay',
  path: '/omnibar-overlay',
  getParentRoute: () => rootRoute
} as any)

const AdminRoute = AdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute
} as any)

const HolonIndexRoute = HolonIndexImport.update({
  id: '/holon/',
  path: '/holon/',
  getParentRoute: () => rootRoute
} as any)

const SettingsPermissionsRoute = SettingsPermissionsImport.update({
  id: '/permissions',
  path: '/permissions',
  getParentRoute: () => SettingsRoute
} as any)

const SettingsDataSourcesRoute = SettingsDataSourcesImport.update({
  id: '/data-sources',
  path: '/data-sources',
  getParentRoute: () => SettingsRoute,
} as any)

const SettingsCustomizeRoute = SettingsCustomizeImport.update({
  id: '/customize',
  path: '/customize',
  getParentRoute: () => SettingsRoute,
} as any)

const SettingsAdvancedRoute = SettingsAdvancedImport.update({
  id: '/advanced',
  path: '/advanced',
  getParentRoute: () => SettingsRoute
} as any)

const SettingsAboutRoute = SettingsAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => SettingsRoute,
} as any)

const HolonThreadIdRoute = HolonThreadIdImport.update({
  id: '/holon/$threadId',
  path: '/holon/$threadId',
  getParentRoute: () => rootRoute
} as any)

const ChatChatIdRoute = ChatChatIdImport.update({
  id: '/chat/$chatId',
  path: '/chat/$chatId',
  getParentRoute: () => rootRoute
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/omnibar-overlay': {
      id: '/omnibar-overlay'
      path: '/omnibar-overlay'
      fullPath: '/omnibar-overlay'
      preLoaderRoute: typeof OmnibarOverlayImport
      parentRoute: typeof rootRoute
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/tasks': {
      id: '/tasks'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof TasksImport
      parentRoute: typeof rootRoute
    }
    '/chat/$chatId': {
      id: '/chat/$chatId'
      path: '/chat/$chatId'
      fullPath: '/chat/$chatId'
      preLoaderRoute: typeof ChatChatIdImport
      parentRoute: typeof rootRoute
    }
    '/holon/$threadId': {
      id: '/holon/$threadId'
      path: '/holon/$threadId'
      fullPath: '/holon/$threadId'
      preLoaderRoute: typeof HolonThreadIdImport
      parentRoute: typeof rootRoute
    }
    '/settings/about': {
      id: '/settings/about'
      path: '/about'
      fullPath: '/settings/about'
      preLoaderRoute: typeof SettingsAboutImport
      parentRoute: typeof SettingsImport
    }
    '/settings/advanced': {
      id: '/settings/advanced'
      path: '/advanced'
      fullPath: '/settings/advanced'
      preLoaderRoute: typeof SettingsAdvancedImport
      parentRoute: typeof SettingsImport
    }
    '/settings/customize': {
      id: '/settings/customize'
      path: '/customize'
      fullPath: '/settings/customize'
      preLoaderRoute: typeof SettingsCustomizeImport
      parentRoute: typeof SettingsImport
    }
    '/settings/data-sources': {
      id: '/settings/data-sources'
      path: '/data-sources'
      fullPath: '/settings/data-sources'
      preLoaderRoute: typeof SettingsDataSourcesImport
      parentRoute: typeof SettingsImport
    }
    '/settings/permissions': {
      id: '/settings/permissions'
      path: '/permissions'
      fullPath: '/settings/permissions'
      preLoaderRoute: typeof SettingsPermissionsImport
      parentRoute: typeof SettingsImport
    }
    '/holon/': {
      id: '/holon/'
      path: '/holon'
      fullPath: '/holon'
      preLoaderRoute: typeof HolonIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface SettingsRouteChildren {
  SettingsAboutRoute: typeof SettingsAboutRoute
  SettingsAdvancedRoute: typeof SettingsAdvancedRoute
  SettingsCustomizeRoute: typeof SettingsCustomizeRoute
  SettingsDataSourcesRoute: typeof SettingsDataSourcesRoute
  SettingsPermissionsRoute: typeof SettingsPermissionsRoute
}

const SettingsRouteChildren: SettingsRouteChildren = {
  SettingsAboutRoute: SettingsAboutRoute,
  SettingsAdvancedRoute: SettingsAdvancedRoute,
  SettingsCustomizeRoute: SettingsCustomizeRoute,
  SettingsDataSourcesRoute: SettingsDataSourcesRoute,
  SettingsPermissionsRoute: SettingsPermissionsRoute,
}

const SettingsRouteWithChildren = SettingsRoute._addFileChildren(SettingsRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/omnibar-overlay': typeof OmnibarOverlayRoute
  '/onboarding': typeof OnboardingRoute
  '/settings': typeof SettingsRouteWithChildren
  '/tasks': typeof TasksRoute
  '/chat/$chatId': typeof ChatChatIdRoute
  '/holon/$threadId': typeof HolonThreadIdRoute
  '/settings/about': typeof SettingsAboutRoute
  '/settings/advanced': typeof SettingsAdvancedRoute
  '/settings/customize': typeof SettingsCustomizeRoute
  '/settings/data-sources': typeof SettingsDataSourcesRoute
  '/settings/permissions': typeof SettingsPermissionsRoute
  '/holon': typeof HolonIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/omnibar-overlay': typeof OmnibarOverlayRoute
  '/onboarding': typeof OnboardingRoute
  '/settings': typeof SettingsRouteWithChildren
  '/tasks': typeof TasksRoute
  '/chat/$chatId': typeof ChatChatIdRoute
  '/holon/$threadId': typeof HolonThreadIdRoute
  '/settings/about': typeof SettingsAboutRoute
  '/settings/advanced': typeof SettingsAdvancedRoute
  '/settings/customize': typeof SettingsCustomizeRoute
  '/settings/data-sources': typeof SettingsDataSourcesRoute
  '/settings/permissions': typeof SettingsPermissionsRoute
  '/holon': typeof HolonIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/omnibar-overlay': typeof OmnibarOverlayRoute
  '/onboarding': typeof OnboardingRoute
  '/settings': typeof SettingsRouteWithChildren
  '/tasks': typeof TasksRoute
  '/chat/$chatId': typeof ChatChatIdRoute
  '/holon/$threadId': typeof HolonThreadIdRoute
  '/settings/about': typeof SettingsAboutRoute
  '/settings/advanced': typeof SettingsAdvancedRoute
  '/settings/customize': typeof SettingsCustomizeRoute
  '/settings/data-sources': typeof SettingsDataSourcesRoute
  '/settings/permissions': typeof SettingsPermissionsRoute
  '/holon/': typeof HolonIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/omnibar-overlay'
    | '/onboarding'
    | '/settings'
    | '/tasks'
    | '/chat/$chatId'
    | '/holon/$threadId'
    | '/settings/about'
    | '/settings/advanced'
    | '/settings/customize'
    | '/settings/data-sources'
    | '/settings/permissions'
    | '/holon'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/omnibar-overlay'
    | '/onboarding'
    | '/settings'
    | '/tasks'
    | '/chat/$chatId'
    | '/holon/$threadId'
    | '/settings/about'
    | '/settings/advanced'
    | '/settings/customize'
    | '/settings/data-sources'
    | '/settings/permissions'
    | '/holon'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/omnibar-overlay'
    | '/onboarding'
    | '/settings'
    | '/tasks'
    | '/chat/$chatId'
    | '/holon/$threadId'
    | '/settings/about'
    | '/settings/advanced'
    | '/settings/customize'
    | '/settings/data-sources'
    | '/settings/permissions'
    | '/holon/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRoute
  OmnibarOverlayRoute: typeof OmnibarOverlayRoute
  OnboardingRoute: typeof OnboardingRoute
  SettingsRoute: typeof SettingsRouteWithChildren
  TasksRoute: typeof TasksRoute
  ChatChatIdRoute: typeof ChatChatIdRoute
  HolonThreadIdRoute: typeof HolonThreadIdRoute
  HolonIndexRoute: typeof HolonIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRoute,
  OmnibarOverlayRoute: OmnibarOverlayRoute,
  OnboardingRoute: OnboardingRoute,
  SettingsRoute: SettingsRouteWithChildren,
  TasksRoute: TasksRoute,
  ChatChatIdRoute: ChatChatIdRoute,
  HolonThreadIdRoute: HolonThreadIdRoute,
  HolonIndexRoute: HolonIndexRoute
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/omnibar-overlay",
        "/onboarding",
        "/settings",
        "/tasks",
        "/chat/$chatId",
        "/holon/$threadId",
        "/holon/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin": {
      "filePath": "admin.tsx"
    },
    "/omnibar-overlay": {
      "filePath": "omnibar-overlay.tsx"
    },
    "/onboarding": {
      "filePath": "onboarding.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx",
      "children": [
        "/settings/about",
        "/settings/advanced",
        "/settings/customize",
        "/settings/data-sources",
        "/settings/permissions"
      ]
    },
    "/tasks": {
      "filePath": "tasks.tsx"
    },
    "/chat/$chatId": {
      "filePath": "chat/$chatId.tsx"
    },
    "/holon/$threadId": {
      "filePath": "holon/$threadId.tsx"
    },
    "/settings/about": {
      "filePath": "settings.about.tsx",
      "parent": "/settings"
    },
    "/settings/advanced": {
      "filePath": "settings.advanced.tsx",
      "parent": "/settings"
    },
    "/settings/customize": {
      "filePath": "settings.customize.tsx",
      "parent": "/settings"
    },
    "/settings/data-sources": {
      "filePath": "settings.data-sources.tsx",
      "parent": "/settings"
    },
    "/settings/permissions": {
      "filePath": "settings.permissions.tsx",
      "parent": "/settings"
    },
    "/holon/": {
      "filePath": "holon/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
